name: 'Pull from Lokalise'
description: 'Pull translation files from Lokalise'
author: 'Lokalise Team'
inputs:
  api_token:
    description: 'API token for Lokalise with read/write permissions'
    required: true
    secret: true
  project_id:
    description: 'Project ID for Lokalise'
    required: true
  base_lang:
    description: 'Base language (e.g., en, fr_FR)'
    required: true
    default: 'en'
  translations_path:
    description: 'Path to translation files'
    required: true
    default: 'locales'
  file_format:
    description: 'Format of the translation files (e.g., json)'
    required: true
    default: 'json'
  additional_params:
    description: 'Additional parameters for Lokalise CLI on pull'
    required: false
    default: ''
  temp_branch_prefix:
    description: 'Prefix for the temp branch to create pull request'
    required: false
    default: 'lok'
  always_pull_base:
    description: 'By default, changes in the base language translation files are ignored. Set this to true to include base language translations in the PR.'
    required: false
    default: false

branding:
  icon: 'download-cloud'
  color: 'orange'

runs:
  using: "composite"
  steps:
    - name: Install Lokalise CLI
      shell: bash
      run: |
        chmod +x "${{ github.action_path }}/../../src/scripts/install_lokalise_cli.sh"
        "${{ github.action_path }}/../../src/scripts/install_lokalise_cli.sh"

    - name: Pull translation files from Lokalise
      id: pull-files
      shell: bash
      env:
        LOKALISE_TOKEN: ${{ inputs.api_token }}
        CLI_ADD_PARAMS: ${{ inputs.additional_params }}
        FILE_FORMAT: ${{ inputs.file_format }}
      run: |
        chmod +x "${{ github.action_path }}/../../src/scripts/lokalise_download.sh"

        . "${{ github.action_path }}/../../src/scripts/lokalise_download.sh"
        
        download_files "${{ inputs.project_id }}"
              
        if [ $? -ne 0 ]; then
          echo "Error during file download"
          echo "has_changes=false" >> $GITHUB_OUTPUT
          exit 1
        fi

        if [[ "${{ inputs.always_pull_base }}" == "true" ]]; then
          STATUS_CMD=$(git status "${{ inputs.translations_path }}/**/*.${{ inputs.file_format }}" --untracked-files=no --porcelain)
        else
          STATUS_CMD=$(git status "${{ inputs.translations_path }}/**/*.${{ inputs.file_format }}" --untracked-files=no --porcelain | grep -v "${{ inputs.translations_path }}/${{ inputs.base_lang }}" || true)
        fi

        if [[ -z "$STATUS_CMD" ]]; then
          echo "No translation file changes detected after pulling from Lokalise"
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "Translation file changes detected after pulling from Lokalise"
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi

        echo "Changes checked"

    - name: Commit and push changes
      id: commit-and-push
      if: steps.pull-files.outputs.has_changes == 'true'
      shell: bash
      run: |
        git config --global user.name "${GITHUB_ACTOR}"
        git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

        TIMESTAMP=$(date +%s)
        BRANCH_NAME="${{ inputs.temp_branch_prefix }}_${{ github.ref_name }}_${SHORT_SHA}_${TIMESTAMP}"
        BRANCH_NAME=$(echo "$BRANCH_NAME" | tr -cd '[:alnum:]_-')

        echo "branch_name=$BRANCH_NAME" >> $GITHUB_ENV

        git checkout -b "$BRANCH_NAME" || git checkout "$BRANCH_NAME"
      
        if [[ "${{ inputs.always_pull_base }}" == "true" ]]; then
          git add "${{ inputs.translations_path }}/**/*.${{ inputs.file_format }}" --force
        else
          git add "${{ inputs.translations_path }}/**/*.${{ inputs.file_format }}" --force ":!${{ inputs.translations_path }}/${{ inputs.base_lang }}"
        fi
        git commit -m 'Translations update'
        git push origin "$BRANCH_NAME"

    - name: Create Pull Request
      if: steps.pull-files.outputs.has_changes == 'true'
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh pr create --base ${{ github.ref_name }} \
                      --head "${{ env.branch_name }}" \
                      --title "Lokalise translations update" \
                      --body "" || {
          echo "Failed to create a Pull Request"
          exit 1
        }

        echo "Pull Request created successfully."